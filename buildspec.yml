version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18

  build:
    commands:
      - echo "Packaging Lambda function..."
      - zip -r deployment.zip index.js

      # Get current alias version (Production version)
      - |
        CURRENT_VERSION=$(aws lambda get-alias --function-name mylambdafunction-1 --name Prod --query "FunctionVersion" --output text || echo "0")
        echo "Current Lambda Version: $CURRENT_VERSION"

      # Deploy the new function version
      - aws lambda update-function-code --function-name mylambdafunction-1 --zip-file fileb://deployment.zip

      # Publish new version with retry logic for ResourceConflictException
      - |
        attempt=0
        NEW_VERSION="0"
        while [ "$NEW_VERSION" = "0" ] && [ $attempt -lt 5 ]; do
          echo "Attempting to publish new version... (Attempt: $((attempt+1)))"
          NEW_VERSION=$(aws lambda publish-version --function-name mylambdafunction-1 --query "Version" --output text || echo "0")
          if [ "$NEW_VERSION" = "0" ]; then
            echo "Publish failed due to resource conflict, retrying in 20 seconds..."
            sleep 20
          fi
          attempt=$((attempt+1))
        done
        echo "New Lambda Version: $NEW_VERSION"

      # Ensure NEW_VERSION is valid
      - |
        if [ "$NEW_VERSION" = "0" ]; then
          echo "Error publishing new version! Exiting."
          exit 1
        fi

      # Check if Resilience Hub application exists
      - |
        echo "Checking if Resilience Hub application 'lambda-1' exists..."
        EXISTING_APP=$(aws resiliencehub list-apps --query "apps[?appName=='lambda-1'].appName" --output text)
        if [ "$EXISTING_APP" != "lambda-1" ]; then
          echo "Resilience Hub application 'lambda-1' does not exist. Creating it..."
          aws resiliencehub create-app --name lambda-1 --resources '[{"resourceName":"mylambdafunction-1","resourceType":"LambdaFunction","resourceArn":"arn:aws:lambda:us-east-1:980921749870:function:mylambdafunction-1"}]'
        fi

      # Add Lambda function to Resilience Hub
      - |
        echo "Adding Lambda function to Resilience Hub..."
        aws resiliencehub add-resource-to-app --app-name lambda-1 --resource-type LambdaFunction --resource-arn arn:aws:lambda:us-east-1:980921749870:function:mylambdafunction-1

      # Test the new function using Resilience Hub resilience validation
      - |
        echo "Validating resilience of new Lambda version..."
        VALIDATE_RESILIENCE=$(aws resiliencehub start-resilience-metrics-collection --app-name lambda-1 --query "Status" --output text)
        if [ "$VALIDATE_RESILIENCE" != "SUCCESS" ]; then
          echo "Resilience validation failed!"
          ROLLBACK=true
        else
          echo "Resilience validation successful!"
          ROLLBACK=false
        fi

      # Rollback if test fails
      - |
        if [ "$ROLLBACK" = "true" ]; then
          echo "Rolling back to previous version $CURRENT_VERSION"
          if [ "$CURRENT_VERSION" = "0" ]; then
            echo "No previous version found! Exiting rollback."
            exit 1
          else
            aws lambda update-alias --function-name mylambdafunction-1 --name Prod --function-version $CURRENT_VERSION
            echo "Rollback successful. Alias 'Prod' now points to version $CURRENT_VERSION."
          fi
        else
          echo "Updating alias to new version $NEW_VERSION"
          aws lambda update-alias --function-name mylambdafunction-1 --name Prod --function-version $NEW_VERSION
        fi

artifacts:
  files:
    - deployment.zip
